stages:
  - install
  - build
  - build-image
  - deploy

image: node:20-alpine # Menggunakan image Node.js yang ringan

# Install dependencies
install:
  stage: install
  script:
    - npm install --force
    - npm install @prisma/client
  artifacts:
    paths:
      - node_modules/
  only:
    - release/master

# Build project Next.js
build:
  stage: build
  script:
    - npm run build
    - npx prisma generate
  artifacts:
    paths:
      - .next/ # Menyimpan hasil build Next.js
  only:
    - release/master

# Build Docker image
build-image:
  stage: build-image
  script:
    - docker login -u gitlab+deploy-token-8389227 -p gldt-v_tELQUD4BC-JtACWf-x registry.gitlab.com
    - docker build -t registry.gitlab.com/z0d3v1/e-commerce-admin:1.0.0 .
    - docker push registry.gitlab.com/z0d3v1/e-commerce-admin:1.0.0
  tags:
    - zero-runner
  only:
    - release/master
# Deploy aplikasi (misalnya ke Kubernetes)
# deploy:
#   stage: deploy
#   script:
#     - kubectl apply -f k8s/deployment.yaml
#     - kubectl rollout restart deployment/your-deployment-name
#   only:
#     - release/master
