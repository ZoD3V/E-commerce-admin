// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Store {
  id        String   @id @default(uuid())
  name      String
  userId    String
  banner    Banner[] @relation("StoreToBanner")
  categories Category[] @relation("StoreToCategory")
  games Game[] @relation("StoreToGame")
  products Product[] @relation("StoreToProduct")
  order Order[] @relation("StoreToOrder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Banner {
  id        String   @id @default(uuid())
  storeId   String
  store     Store @relation("StoreToBanner", fields: [storeId], references: [id])
  label     String
  imgUrl    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Category{
  id String   @id @default(uuid())
  storeId String
  store Store @relation("StoreToCategory",fields: [storeId], references: [id])
  games Game[] @relation("CategoryToGame")
  products Product[] @relation("CategoryToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model Game{
  id String   @id @default(uuid())
  storeId String
  store Store @relation("StoreToGame",fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToGame",fields: [categoryId], references: [id])
  games Product[] @relation("GameToProduct")
  name String
  name_dev String
  desc String
  imgUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([storeId])
}

model Product{
  id String   @id @default(uuid())
  storeId String
  store Store @relation("StoreToProduct",fields: [storeId], references: [id])
  categoryId String
  category Category @relation("CategoryToProduct",fields: [categoryId], references: [id])
  gameId String
  game Game @relation("GameToProduct",fields: [gameId], references: [id])
  product Order[] @relation("ProductToOrder")
  name String
  price Decimal @db.Decimal(15,2)
  product_code String
  status Boolean @default(false)
  isBattlePass Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@index([storeId])
  @@index([gameId])
  
}

model Order{
  id String   @id @default(uuid())
  storeId String
  store Store @relation("StoreToOrder",fields: [storeId], references: [id])
  productId String
  product Product @relation("ProductToOrder",fields: [productId], references: [id])
  gameId String
  amount Decimal @db.Decimal(15,2)
  status String @default("pending")
  phone String @default("") 
  transaction_code String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([productId])
}